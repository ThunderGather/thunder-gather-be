name: CI/CD 파이프라인

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 리포지토리 체크아웃
        uses: actions/checkout@v2

      - name: JDK 17 설정
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle 빌드 수행
        run: ./gradlew clean build

      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker 이미지 빌드 및 푸시
        run: |
          docker build -t ${{ secrets.DOCKER_REPONAME }}:${{ github.sha }} . 
          docker tag ${{ secrets.DOCKER_REPONAME }}:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPONAME }}:${{ github.sha }} 
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPONAME }}:${{ github.sha }} 

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: 배포를 위한 SSH 설정
        run: |
          mkdir -p ~/.ssh  
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa 
          chmod 700 ~/.ssh  
          chmod 600 ~/.ssh/id_rsa  
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts || true  

      - name: 서버에 application.yml 생성
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            mkdir -p ~/app/config/  
            echo "${{ secrets.APPLICATION_YML }}" > ~/app/config/application.yml  

      - name: Docker 컨테이너 서버 배포
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPONAME }}:${{ github.sha }} 
            docker stop ${{ secrets.DOCKER_REPONAME }} || true  
            docker rm ${{ secrets.DOCKER_REPONAME }} || true 
            docker run -d -p 5000:8080 --name ${{ secrets.DOCKER_REPONAME }} \ 
              -v ~/app/config/application.yml:/app/application.yml \ 
              -e FILE_UPLOAD_DIR=/app/static \  
              ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPONAME }}:${{ github.sha }}

      - name: Docker 컨테이너 로그 출력
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            echo "Docker 컨테이너 로그 출력" && \
            docker logs ${{ secrets.DOCKER_REPONAME }}  
